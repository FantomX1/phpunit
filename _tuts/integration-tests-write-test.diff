diff --git a/app/config/config_test.yml b/app/config/config_test.yml
index 2f6d925..f1d817c 100644
--- a/app/config/config_test.yml
+++ b/app/config/config_test.yml
@@ -14,3 +14,6 @@ web_profiler:
 
 swiftmailer:
     disable_delivery: true
+
+services:
+    test.AppBundle\Factory\DinosaurFactory: '@AppBundle\Factory\DinosaurFactory'
diff --git a/tests/AppBundle/Service/EnclosureBuilderServiceIntegrationTest.php b/tests/AppBundle/Service/EnclosureBuilderServiceIntegrationTest.php
new file mode 100644
index 0000000..0f264d8
--- /dev/null
+++ b/tests/AppBundle/Service/EnclosureBuilderServiceIntegrationTest.php
@@ -0,0 +1,77 @@
+<?php
+
+namespace Tests\AppBundle\Service;
+
+use AppBundle\Entity\Dinosaur;
+use AppBundle\Entity\Enclosure;
+use AppBundle\Entity\Security;
+use AppBundle\Factory\DinosaurFactory;
+use AppBundle\Service\EnclosureBuilderService;
+use Doctrine\ORM\EntityManagerInterface;
+use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
+
+class EnclosureBuilderServiceIntegrationTest extends KernelTestCase
+{
+    /**
+     * @var EntityManagerInterface
+     */
+    private $entityManager;
+
+    /**
+     * @var DinosaurFactory
+     */
+    private $dinosaurFactory;
+
+    /**
+     * @var EnclosureBuilderService
+     */
+    private $enclosureBuilderService;
+
+    protected function setUp()
+    {
+        self::bootKernel();
+
+        $this->entityManager = static::$kernel->getContainer()
+            ->get('doctrine')
+            ->getManager();
+
+        $this->dinosaurFactory = static::$kernel->getContainer()
+            ->get('test.' . DinosaurFactory::class);
+
+        $this->enclosureBuilderService = new EnclosureBuilderService(
+            $this->entityManager,
+            $this->dinosaurFactory
+        );
+    }
+
+    public function testItBuildsEnclosureWithDefaultSpecifications()
+    {
+        $this->enclosureBuilderService->buildEnclosure();
+
+        $query = 'SELECT COUNT(s) FROM ' . Security::class . ' s';
+        $count = (int)$this->entityManager
+            ->createQuery($query)
+            ->getSingleScalarResult();
+
+        $this->assertSame(1, $count, 'Amount of security systems is not the same');
+
+        $query = 'SELECT COUNT(d) FROM ' . Dinosaur::class . ' d';
+        $count = (int)$this->entityManager
+            ->createQuery($query)
+            ->getSingleScalarResult();
+
+        $this->assertSame(3, $count, 'Amount of dinosaurs is not the same');
+    }
+
+    protected function tearDown()
+    {
+        parent::tearDown();
+
+        $this->entityManager->close();
+
+        // avoid memory leaks
+        $this->entityManager = null;
+        $this->dinosaurFactory = null;
+        $this->enclosureBuilderService = null;
+    }
+}
