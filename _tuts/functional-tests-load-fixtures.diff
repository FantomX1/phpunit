diff --git a/app/AppKernel.php b/app/AppKernel.php
index bb49609..c05a763 100644
--- a/app/AppKernel.php
+++ b/app/AppKernel.php
@@ -1,5 +1,6 @@
 <?php
 
+use Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle;
 use Liip\FunctionalTestBundle\LiipFunctionalTestBundle;
 use Symfony\Component\HttpKernel\Kernel;
 use Symfony\Component\Config\Loader\LoaderInterface;
@@ -23,6 +24,7 @@ class AppKernel extends Kernel
             $bundles[] = new Symfony\Bundle\DebugBundle\DebugBundle();
             $bundles[] = new Symfony\Bundle\WebProfilerBundle\WebProfilerBundle();
             $bundles[] = new Sensio\Bundle\DistributionBundle\SensioDistributionBundle();
+            $bundles[] = new DoctrineFixturesBundle();
 
             if ('dev' === $this->getEnvironment()) {
                 $bundles[] = new Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle();
diff --git a/composer.json b/composer.json
index cbaa0ec..59197e9 100644
--- a/composer.json
+++ b/composer.json
@@ -33,6 +33,7 @@
         "twig/twig": "^1.0||^2.0"
     },
     "require-dev": {
+        "doctrine/doctrine-fixtures-bundle": "^2.3",
         "liip/functional-test-bundle": "^1.8",
         "phpunit/phpunit": "^6.3",
         "sensio/generator-bundle": "^3.0",
diff --git a/composer.lock b/composer.lock
index a62063b..5d4d96b 100644
--- a/composer.lock
+++ b/composer.lock
@@ -4,7 +4,7 @@
         "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file",
         "This file is @generated automatically"
     ],
-    "content-hash": "74e810d4c4084eead40f620a68cad933",
+    "content-hash": "133ffc76bc67cce81a5cf52f6057801b",
     "packages": [
         {
             "name": "composer/ca-bundle",
@@ -2250,6 +2250,122 @@
         }
     ],
     "packages-dev": [
+        {
+            "name": "doctrine/data-fixtures",
+            "version": "v1.2.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/doctrine/data-fixtures.git",
+                "reference": "17fa5bfe6ff52e35cb3d9ec37c934a2f4bd1fa2e"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/doctrine/data-fixtures/zipball/17fa5bfe6ff52e35cb3d9ec37c934a2f4bd1fa2e",
+                "reference": "17fa5bfe6ff52e35cb3d9ec37c934a2f4bd1fa2e",
+                "shasum": ""
+            },
+            "require": {
+                "doctrine/common": "~2.2",
+                "php": "^5.6 || ^7.0"
+            },
+            "conflict": {
+                "doctrine/orm": "< 2.4"
+            },
+            "require-dev": {
+                "doctrine/dbal": "^2.5.4",
+                "doctrine/orm": "^2.5.4",
+                "phpunit/phpunit": "^5.4.6"
+            },
+            "suggest": {
+                "doctrine/mongodb-odm": "For loading MongoDB ODM fixtures",
+                "doctrine/orm": "For loading ORM fixtures",
+                "doctrine/phpcr-odm": "For loading PHPCR ODM fixtures"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.3.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-0": {
+                    "Doctrine\\Common\\DataFixtures": "lib/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Jonathan Wage",
+                    "email": "jonwage@gmail.com"
+                }
+            ],
+            "description": "Data Fixtures for all Doctrine Object Managers",
+            "homepage": "http://www.doctrine-project.org",
+            "keywords": [
+                "database"
+            ],
+            "time": "2016-09-20T10:07:57+00:00"
+        },
+        {
+            "name": "doctrine/doctrine-fixtures-bundle",
+            "version": "2.3.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/doctrine/DoctrineFixturesBundle.git",
+                "reference": "0f1a2f91b349e10f5c343f75ab71d23aace5b029"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/doctrine/DoctrineFixturesBundle/zipball/0f1a2f91b349e10f5c343f75ab71d23aace5b029",
+                "reference": "0f1a2f91b349e10f5c343f75ab71d23aace5b029",
+                "shasum": ""
+            },
+            "require": {
+                "doctrine/data-fixtures": "~1.0",
+                "doctrine/doctrine-bundle": "~1.0",
+                "php": ">=5.3.2",
+                "symfony/doctrine-bridge": "~2.3|~3.0"
+            },
+            "type": "symfony-bundle",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.2.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Doctrine\\Bundle\\FixturesBundle\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Symfony Community",
+                    "homepage": "http://symfony.com/contributors"
+                },
+                {
+                    "name": "Doctrine Project",
+                    "homepage": "http://www.doctrine-project.org"
+                },
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                }
+            ],
+            "description": "Symfony DoctrineFixturesBundle",
+            "homepage": "http://www.doctrine-project.org",
+            "keywords": [
+                "Fixture",
+                "persistence"
+            ],
+            "time": "2015-11-04T21:23:23+00:00"
+        },
         {
             "name": "liip/functional-test-bundle",
             "version": "1.8.0",
diff --git a/src/AppBundle/DataFixtures/ORM/LoadBasicParkData.php b/src/AppBundle/DataFixtures/ORM/LoadBasicParkData.php
new file mode 100644
index 0000000..c021114
--- /dev/null
+++ b/src/AppBundle/DataFixtures/ORM/LoadBasicParkData.php
@@ -0,0 +1,55 @@
+<?php
+
+namespace AppBundle\DataFixtures\ORM;
+
+use AppBundle\Entity\Dinosaur;
+use AppBundle\Entity\Enclosure;
+use AppBundle\Entity\Tracker;
+use Doctrine\Common\DataFixtures\AbstractFixture;
+use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
+use Doctrine\Common\Persistence\ObjectManager;
+
+class LoadBasicParkData extends AbstractFixture implements OrderedFixtureInterface
+{
+    public function load(ObjectManager $manager)
+    {
+        $carnivorousEnclosure = new Enclosure(true);
+        $manager->persist($carnivorousEnclosure);
+        $this->addReference('carnivorous-enclosure', $carnivorousEnclosure);
+
+        $herbivorousEnclosure = new Enclosure();
+        $manager->persist($herbivorousEnclosure);
+        $this->addReference('herbivorous-enclosure', $herbivorousEnclosure);
+
+        $manager->persist(new Enclosure());
+
+        $this->addDinosaur($manager, $carnivorousEnclosure, 'Velociraptor', true, 3);
+        $this->addDinosaur($manager, $carnivorousEnclosure, 'Velociraptor', true, 1);
+        $this->addDinosaur($manager, $carnivorousEnclosure, 'Velociraptor', true, 5);
+
+        $this->addDinosaur($manager, $herbivorousEnclosure, 'Triceratops', false, 7);
+
+        $manager->flush();
+    }
+
+    public function getOrder()
+    {
+        return 1;
+    }
+
+    private function addDinosaur(
+        ObjectManager $manager,
+        Enclosure $enclosure,
+        string $genus,
+        bool $isCarnivorous,
+        int $length
+    )
+    {
+        $dinosaur = new Dinosaur($genus, $isCarnivorous);
+        $dinosaur->setEnclosure($enclosure);
+        $dinosaur->setLength($length);
+        $dinosaur->addTracker(new Tracker());
+
+        $manager->persist($dinosaur);
+    }
+}
diff --git a/src/AppBundle/DataFixtures/ORM/LoadSecurityData.php b/src/AppBundle/DataFixtures/ORM/LoadSecurityData.php
new file mode 100644
index 0000000..f02342e
--- /dev/null
+++ b/src/AppBundle/DataFixtures/ORM/LoadSecurityData.php
@@ -0,0 +1,40 @@
+<?php
+
+namespace AppBundle\DataFixtures\ORM;
+
+use AppBundle\Entity\Enclosure;
+use AppBundle\Entity\Security;
+use Doctrine\Common\DataFixtures\AbstractFixture;
+use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
+use Doctrine\Common\Persistence\ObjectManager;
+
+class LoadSecurityData extends AbstractFixture implements OrderedFixtureInterface
+{
+    public function load(ObjectManager $manager)
+    {
+        $herbivorousEnclosure = $this->getReference('herbivorous-enclosure');
+
+        $this->addSecurity($herbivorousEnclosure, 'Fence', true);
+
+        $carnivorousEnclosure = $this->getReference('carnivorous-enclosure');
+
+        $this->addSecurity($carnivorousEnclosure, 'Electric fence', false);
+        $this->addSecurity($carnivorousEnclosure, 'Guard tower', false);
+
+        $manager->flush();
+    }
+
+    public function getOrder()
+    {
+        return 2;
+    }
+
+    private function addSecurity(
+        Enclosure $enclosure,
+        string $name,
+        bool $isActive
+    )
+    {
+        $enclosure->addSecurity(new Security($name, $isActive, $enclosure));
+    }
+}
diff --git a/src/AppBundle/Entity/Dinosaur.php b/src/AppBundle/Entity/Dinosaur.php
index d4bc7ad..0962511 100644
--- a/src/AppBundle/Entity/Dinosaur.php
+++ b/src/AppBundle/Entity/Dinosaur.php
@@ -106,4 +106,9 @@ class Dinosaur
     {
         $this->tracker->zap();
     }
+
+    public function setEnclosure(Enclosure $enclosure): void
+    {
+        $this->enclosure = $enclosure;
+    }
 }
diff --git a/src/AppBundle/Entity/Enclosure.php b/src/AppBundle/Entity/Enclosure.php
index 915217e..b53475c 100644
--- a/src/AppBundle/Entity/Enclosure.php
+++ b/src/AppBundle/Entity/Enclosure.php
@@ -49,7 +49,7 @@ class Enclosure
         return $this->dinosaurs;
     }
 
-    public function addDinosaur(Dinosaur $dinosaur): void
+    public function addDinosaur(Dinosaur $dinosaur)
     {
         if ($dinosaur->isCarnivorous() !== $this->isCarnivorous()) {
             throw new NotABuffetException();
@@ -63,7 +63,7 @@ class Enclosure
         return $this->isCarnivorous;
     }
 
-    public function addSecurity($security): void
+    public function addSecurity($security)
     {
         if (!$security instanceof Security) {
             throw new \InvalidArgumentException('This does not look safe');
diff --git a/tests/AppBundle/Controller/DefaultControllerTest.php b/tests/AppBundle/Controller/DefaultControllerTest.php
index 821ebdd..bfa14d0 100644
--- a/tests/AppBundle/Controller/DefaultControllerTest.php
+++ b/tests/AppBundle/Controller/DefaultControllerTest.php
@@ -2,12 +2,17 @@
 
 namespace Tests\AppBundle\Controller;
 
+use AppBundle\DataFixtures\ORM\LoadBasicParkData;
+use AppBundle\DataFixtures\ORM\LoadSecurityData;
 use Liip\FunctionalTestBundle\Test\WebTestCase;
 
 class DefaultControllerTest extends WebTestCase
 {
     public function testTheIsAWayToSoundAnAlarmOnInactiveSecurity()
     {
-
+        $this->loadFixtures([
+            LoadBasicParkData::class,
+            LoadSecurityData::class,
+        ]);
     }
 }
